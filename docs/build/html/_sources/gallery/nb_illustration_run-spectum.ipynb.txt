{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "062ad163",
   "metadata": {},
   "source": [
    "# Run spectrum"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "777bbef2",
   "metadata": {},
   "source": [
    "![header](../figures/logos_partenaires_DC_WOC-ESA.jpg)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "32c11012",
   "metadata": {},
   "source": [
    "## Velocity metrics package illustration: Run spectrum \n",
    "\n",
    "## Agulhas, BFN-QG\n",
    " \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a77d83af",
   "metadata": {},
   "source": [
    "\n",
    "***\n",
    "**Authors:** Datlas <br>\n",
    "**Copyright:** 2024 Datlas <br>\n",
    "**License:** MIT\n",
    "\n",
    "<div class=\"alert alert-block alert-success\">\n",
    "<h1><center>Agulhas: BFNQG currents maps</center></h1>\n",
    " <h5><center> The notebook aims to illustrate how to run the velocity metrics. Here, the example uses surface current maps produced by the BFN-QG in the Agulhas region.</center></h5>\n",
    "    \n",
    "</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f7a6dee4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import velocity_metrics.spectrum.spectrum as spectrum \n",
    "import sys  \n",
    "sys.path.append('../')\n",
    "from src import utils"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c98418b",
   "metadata": {},
   "source": [
    "## Parameters"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04f262bc",
   "metadata": {},
   "source": [
    "### Input directory"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4ac91ce9",
   "metadata": {},
   "outputs": [],
   "source": [
    "input_dict = '../dc_data/DC_example_BFNQG_Agulhas/dictionnaries/'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "beaad8e7",
   "metadata": {},
   "source": [
    "### Output directory"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3a7da832",
   "metadata": {},
   "outputs": [],
   "source": [
    "outputdir = '../results/metrics_illustration/'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "749d12e2",
   "metadata": {},
   "source": [
    "### Evaluated maps parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7edce10c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data_type : BFNQG1\n",
      "label : Metric illustration BFN QG\n",
      "path : ../dc_data/DC_example_BFNQG_Agulhas/maps_BFNQG\n",
      "pattern : BFNQG_WOC_Ugeo_daily\n",
      "match : BFNQG_WOC_Ugeo_daily_(\\d{4})-(\\d{2})-(\\d{2}).nc\n",
      "varu : ug\n",
      "varv : vg\n",
      "nlon : longitude\n",
      "nlat : latitude\n"
     ]
    }
   ],
   "source": [
    "path_dict_product =   input_dict+'data_type_metric_illustration_bfnqg.json' \n",
    "\n",
    "utils.print_json(path_dict_product)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6ad77c4",
   "metadata": {},
   "source": [
    "### Region parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f27d1239",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "name : T1_AGULHAS\n",
      "lllon : 11\n",
      "urlon : 33\n",
      "lllat : -44\n",
      "urlat : -27\n",
      "coords : [[12, -28], [32, -28], [32, -43], [12, -43], [12, -28]]\n"
     ]
    }
   ],
   "source": [
    "path_dict_region = input_dict+'region_metric_illustration_Agulhas.json'\n",
    "\n",
    "utils.print_json(path_dict_region)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3ea00fc",
   "metadata": {},
   "source": [
    "## 1. Compute spectrum "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "620d898c",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Percent: [#############################-] 96.77%, , "
     ]
    }
   ],
   "source": [
    "dic_spectrum = spectrum.run([path_dict_product], path_dict_region, depth = 0, output_dir= outputdir)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de4418be",
   "metadata": {},
   "source": [
    "## 2. Plot spectrum "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e9e06878",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'os' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[7], line 4\u001b[0m\n\u001b[1;32m      1\u001b[0m name_plot \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mSpectrum_metric_illustration_BFNQG.png\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m      3\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mglob\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m glob\n\u001b[0;32m----> 4\u001b[0m list_spectrum_pickles \u001b[38;5;241m=\u001b[39m glob(os\u001b[38;5;241m.\u001b[39mpath\u001b[38;5;241m.\u001b[39mjoin(outputdir,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mspectrum_BFNQG1_region_metric_illustration_Agulhas_*.pyo\u001b[39m\u001b[38;5;124m'\u001b[39m)) \n\u001b[1;32m      7\u001b[0m _ \u001b[38;5;241m=\u001b[39m spectrum\u001b[38;5;241m.\u001b[39mplot(list_spectrum_pickles,\n\u001b[1;32m      8\u001b[0m                       outfile\u001b[38;5;241m=\u001b[39moutputdir\u001b[38;5;241m+\u001b[39mname_plot)\n",
      "\u001b[0;31mNameError\u001b[0m: name 'os' is not defined"
     ]
    }
   ],
   "source": [
    "name_plot = 'Spectrum_metric_illustration_BFNQG.png'\n",
    "\n",
    "from glob import glob\n",
    "list_spectrum_pickles = glob(os.path.join(outputdir,'spectrum_BFNQG1_region_metric_illustration_Agulhas_*.pyo')) \n",
    "\n",
    "\n",
    "_ = spectrum.plot(list_spectrum_pickles,\n",
    "                      outfile=outputdir+name_plot)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f72af581",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "velocity_metrics",
   "language": "python",
   "name": "velocity_metrics"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
